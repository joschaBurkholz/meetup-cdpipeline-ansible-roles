- name: Combine the default role variables with the given external parameters
  set_fact:
    _DOCKER: "{{ docker_default | combine(_docker, recursive=True) }}"

- name: Stop Docker
  service: name=docker state=stopped
  ignore_errors: yes

- name: Query linux kernel release
  shell: uname -r | xargs
  register: kernel_release

- name: Install apt-transport-https and ca-certificates
  apt: pkg={{ item }} state=present update_cache=yes cache_valid_time=900
  with_items:
    - apt-transport-https
    - ca-certificates
  ignore_errors: yes

- name: install docker gpg key
  shell: apt-key adv --keyserver {{ _DOCKER.gpg_server }} --recv-keys {{ _DOCKER.gpg_key }}
  ignore_errors: yes

- name: Add Docker repository and update apt cache
  apt_repository:
    repo: "{{ _DOCKER.apt_repository }}"
    mode: '644'
    update_cache: yes
    state: present
  ignore_errors: yes

- name: Install linux-image-extra-* packages to enable AuFS driver
  apt: pkg={{ item }} state=present
  with_items:
    - linux-image-extra-{{ kernel_release.stdout }}
    - linux-image-extra-virtual
  ignore_errors: yes

- name: Install docker-engine
  apt: name=docker-engine={{ _DOCKER.version }} state=present force=yes
  ignore_errors: yes

- name: Create Docker group
  group: name=docker state=present gid=13080

- name: Create systemd configuration directory for Docker service
  file:
    dest: /etc/systemd/system/docker.service.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Set docker daemon options
  copy:
    content: |
      [Service]
      Environment="DOCKER_OPTS={{ _DOCKER.docker_opts.rstrip('\n') }}"
    dest: /etc/systemd/system/docker.service.d/env.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload systemd
    - Restart docker

- name: Ensure docker daemon options used (systemd)
  template:
    src: docker.conf
    dest: /etc/systemd/system/docker.service.d/docker.conf
  notify:
    - Reload systemd
    - Restart docker

- name: Create http proxy configuration for docker daemon
  template:
    src: http-proxy.conf
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload systemd
    - Restart docker

# We must install pip via apt before we can use the pip module below
- name: Install pip, python-dev package with apt
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: 600
  with_items:
    - python-dev
    - python-pip
  ignore_errors: yes

- name: Install latest pip and setuptools with pip
  pip:
    name: "{{ item.name }}"
    state: latest
  with_items:
    - { name: pip, version: "latest" }
    - { name: setuptools, version: "latest" }
  ignore_errors: yes

- name: Install specific docker-py with pip
  pip:
    name: "{{ item.name }}"
    state: present
    version: "{{ item.version }}"
  with_items:
    - { name: docker-py, version: "1.10.6" }
  ignore_errors: yes

- name: Check if /etc/updatedb.conf exists
  stat:
    path: /etc/updatedb.conf
  register: updatedb_conf_exists

- name: Ensure updatedb does not index /var/lib/docker
  lineinfile:
    dest: /etc/updatedb.conf
    state: present
    backrefs: yes
    regexp: '^PRUNEPATHS="(/var/lib/docker )?(.*)"$'
    line: 'PRUNEPATHS="/var/lib/docker \2"'
  when: updatedb_conf_exists.stat.exists

- name: Check if /etc/default/ufw exists
  stat:
    path: /etc/default/ufw
  register: ufw_default_exists

- name: Change ufw default forward policy from drop to accept
  lineinfile:
    dest: /etc/default/ufw
    regexp: "^DEFAULT_FORWARD_POLICY="
    line: "DEFAULT_FORWARD_POLICY=\"ACCEPT\""
  when: ufw_default_exists.stat.exists

- name: Make sure Docker is running
  service: name=docker state=running

- name: Make sure Docker boots on startup
  service: name=docker enabled=yes
